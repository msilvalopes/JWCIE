package hibernate;
// Generated 24/09/2011 16:54:31 by Hibernate Tools 3.2.1.GA

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/**
 * Usuarios generated by hbm2java
 */
public class Usuarios {

    private Integer id;
    private String login;
    private String email;
    private String nome;
    private String senha;
    private int flAdmin;

    public Usuarios() {
    }

    public Usuarios(String login, String email, String nome, String senha, int flAdmin) {
        this.login = login;
        this.email = email;
        this.nome = nome;
        this.senha = senha;
        this.flAdmin = flAdmin;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getLogin() {
        return this.login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public String getSenha() {
        return this.senha;
    }
    public void setSenha(String senha) {
        this.senha = senha;
    }
    public boolean senhaIgual(String senha) {
        return this.senha.equals(stringHexa(gerarHash(senha, "SHA-256")));
    }
    public void setarSenha(String senha) {
        if(senha.length() < 6)
            return;
        
        this.senha = stringHexa(gerarHash(senha, "SHA-256"));
    }

    public int getFlAdmin() {
        return this.flAdmin;
    }

    public void setFlAdmin(int flAdmin) {
        this.flAdmin = flAdmin;
    }

    private static String stringHexa(byte[] bytes) {
        StringBuilder s = new StringBuilder();
        for (int i = 0; i < bytes.length; i++) {
            int parteAlta = ((bytes[i] >> 4) & 0xf) << 4;
            int parteBaixa = bytes[i] & 0xf;
            if (parteAlta == 0) {
                s.append('0');
            }
            s.append(Integer.toHexString(parteAlta | parteBaixa));
        }
        return s.toString();
    }

    public static byte[] gerarHash(String frase, String algoritmo) {
        try {
            MessageDigest md = MessageDigest.getInstance(algoritmo);
            md.update(frase.getBytes());
            return md.digest();
        } catch (NoSuchAlgorithmException e) {
            return (new byte[0]);
        }
    }
}
